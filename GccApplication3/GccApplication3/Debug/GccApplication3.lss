
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  000009a0  00000a34  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009a0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000003  0080012a  0080012a  00000a5e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a5e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a90  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000108  00000000  00000000  00000ad0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000013c0  00000000  00000000  00000bd8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000946  00000000  00000000  00001f98  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000093f  00000000  00000000  000028de  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000278  00000000  00000000  00003220  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000051b  00000000  00000000  00003498  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b34  00000000  00000000  000039b3  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f0  00000000  00000000  000044e7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 8d 01 	jmp	0x31a	; 0x31a <__ctors_end>
   4:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
   8:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
   c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  10:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  14:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  18:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  1c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  20:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  24:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  28:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  2c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  30:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  34:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  38:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  3c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  40:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  44:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  48:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  4c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  50:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  54:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  58:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  5c:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  60:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>
  64:	0c 94 aa 01 	jmp	0x354	; 0x354 <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	bc 5f       	subi	r27, 0xFC	; 252
  6a:	9c 60       	ori	r25, 0x0C	; 12
  6c:	a4 61       	ori	r26, 0x14	; 20
  6e:	84 62       	ori	r24, 0x24	; 36
  70:	b6 63       	ori	r27, 0x36	; 54
  72:	96 64       	ori	r25, 0x46	; 70
  74:	b0 65       	ori	r27, 0x50	; 80
  76:	9f 66       	ori	r25, 0x6F	; 111
  78:	b5 67       	ori	r27, 0x75	; 117
  7a:	ff ff       	.word	0xffff	; ????

0000007c <ssd1306oled_font>:
	...
  84:	00 2f 00 00 00 00 07 00 07 00 00 14 7f 14 7f 14     ./..............
  94:	00 24 2a 7f 2a 12 00 62 64 08 13 23 00 36 49 55     .$*.*..bd..#.6IU
  a4:	22 50 00 00 05 03 00 00 00 00 1c 22 41 00 00 00     "P........."A...
  b4:	41 22 1c 00 00 14 08 3e 08 14 00 08 08 3e 08 08     A".....>.....>..
  c4:	00 00 00 a0 60 00 00 08 08 08 08 08 00 00 60 60     ....`.........``
  d4:	00 00 00 20 10 08 04 02 00 3e 51 49 45 3e 00 00     ... .....>QIE>..
  e4:	42 7f 40 00 00 42 61 51 49 46 00 21 41 45 4b 31     B.@..BaQIF.!AEK1
  f4:	00 18 14 12 7f 10 00 27 45 45 45 39 00 3c 4a 49     .......'EEE9.<JI
 104:	49 30 00 01 71 09 05 03 00 36 49 49 49 36 00 06     I0..q....6III6..
 114:	49 49 29 1e 00 00 36 36 00 00 00 00 56 36 00 00     II)...66....V6..
 124:	00 08 14 22 41 00 00 14 14 14 14 14 00 00 41 22     ..."A.........A"
 134:	14 08 00 02 01 51 09 06 00 32 49 59 51 3e 00 7c     .....Q...2IYQ>.|
 144:	12 11 12 7c 00 7f 49 49 49 36 00 3e 41 41 41 22     ...|..III6.>AAA"
 154:	00 7f 41 41 22 1c 00 7f 49 49 49 41 00 7f 09 09     ..AA"...IIIA....
 164:	09 01 00 3e 41 49 49 7a 00 7f 08 08 08 7f 00 00     ...>AIIz........
 174:	41 7f 41 00 00 20 40 41 3f 01 00 7f 08 14 22 41     A.A.. @A?....."A
 184:	00 7f 40 40 40 40 00 7f 02 0c 02 7f 00 7f 04 08     ..@@@@..........
 194:	10 7f 00 3e 41 41 41 3e 00 7f 09 09 09 06 00 3e     ...>AAA>.......>
 1a4:	41 51 21 5e 00 7f 09 19 29 46 00 46 49 49 49 31     AQ!^....)F.FIII1
 1b4:	00 01 01 7f 01 01 00 3f 40 40 40 3f 00 1f 20 40     .......?@@@?.. @
 1c4:	20 1f 00 3f 40 38 40 3f 00 63 14 08 14 63 00 07      ..?@8@?.c...c..
 1d4:	08 70 08 07 00 61 51 49 45 43 00 00 7f 41 41 00     .p...aQIEC...AA.
 1e4:	00 55 2a 55 2a 55 00 00 41 41 7f 00 00 04 02 01     .U*U*U..AA......
 1f4:	02 04 00 40 40 40 40 40 00 00 01 02 04 00 00 20     ...@@@@@....... 
 204:	54 54 54 78 00 7f 48 44 44 38 00 38 44 44 44 20     TTTx..HDD8.8DDD 
 214:	00 38 44 44 48 7f 00 38 54 54 54 18 00 08 7e 09     .8DDH..8TTT...~.
 224:	01 02 00 18 a4 a4 a4 7c 00 7f 08 04 04 78 00 00     .......|.....x..
 234:	44 7d 40 00 00 40 80 84 7d 00 00 7f 10 28 44 00     D}@..@..}....(D.
 244:	00 00 41 7f 40 00 00 7c 04 18 04 78 00 7c 08 04     ..A.@..|...x.|..
 254:	04 78 00 38 44 44 44 38 00 fc 24 24 24 18 00 18     .x.8DDD8..$$$...
 264:	24 24 18 fc 00 7c 08 04 04 08 00 48 54 54 54 20     $$...|.....HTTT 
 274:	00 04 3f 44 40 20 00 3c 40 40 20 7c 00 1c 20 40     ..?D@ .<@@ |.. @
 284:	20 1c 00 3c 40 30 40 3c 00 44 28 10 28 44 00 1c      ..<@0@<.D(.(D..
 294:	a0 a0 a0 7c 00 44 64 54 4c 44 00 00 08 77 41 00     ...|.DdTLD...wA.
 2a4:	00 00 00 63 00 00 00 00 41 77 08 00 00 08 04 08     ...c....Aw......
 2b4:	08 04 00 3a 40 40 20 7a 00 3d 40 40 40 3d 00 21     ...:@@ z.=@@@=.!
 2c4:	54 54 54 79 00 7d 12 11 12 7d 00 39 44 44 44 39     TTTy.}...}.9DDD9
 2d4:	00 3d 42 42 42 3d 00 02 05 02 00 00 00 7e 01 49     .=BBB=.......~.I
 2e4:	55 73 00 7c 10 10 08 1c                             Us.|....

000002ec <init_sequence>:
 2ec:	ae 20 00 b0 c8 00 10 40 81 3f a1 a6 a8 3f a4 d3     . .....@.?...?..
 2fc:	00 d5 f0 d9 22 da 12 db 20 8d 14                    ...."... ..

00000307 <__c.2010>:
 307:	53 74 72 69 6e 67 20 66 72 6f 6d 20 46 4c 41 53     String from FLAS
 317:	48 00 00                                            H..

0000031a <__ctors_end>:
 31a:	11 24       	eor	r1, r1
 31c:	1f be       	out	0x3f, r1	; 63
 31e:	cf ef       	ldi	r28, 0xFF	; 255
 320:	d8 e0       	ldi	r29, 0x08	; 8
 322:	de bf       	out	0x3e, r29	; 62
 324:	cd bf       	out	0x3d, r28	; 61

00000326 <__do_copy_data>:
 326:	11 e0       	ldi	r17, 0x01	; 1
 328:	a0 e0       	ldi	r26, 0x00	; 0
 32a:	b1 e0       	ldi	r27, 0x01	; 1
 32c:	e0 ea       	ldi	r30, 0xA0	; 160
 32e:	f9 e0       	ldi	r31, 0x09	; 9
 330:	02 c0       	rjmp	.+4      	; 0x336 <__do_copy_data+0x10>
 332:	05 90       	lpm	r0, Z+
 334:	0d 92       	st	X+, r0
 336:	aa 32       	cpi	r26, 0x2A	; 42
 338:	b1 07       	cpc	r27, r17
 33a:	d9 f7       	brne	.-10     	; 0x332 <__do_copy_data+0xc>

0000033c <__do_clear_bss>:
 33c:	21 e0       	ldi	r18, 0x01	; 1
 33e:	aa e2       	ldi	r26, 0x2A	; 42
 340:	b1 e0       	ldi	r27, 0x01	; 1
 342:	01 c0       	rjmp	.+2      	; 0x346 <.do_clear_bss_start>

00000344 <.do_clear_bss_loop>:
 344:	1d 92       	st	X+, r1

00000346 <.do_clear_bss_start>:
 346:	ad 32       	cpi	r26, 0x2D	; 45
 348:	b2 07       	cpc	r27, r18
 34a:	e1 f7       	brne	.-8      	; 0x344 <.do_clear_bss_loop>
 34c:	0e 94 b6 04 	call	0x96c	; 0x96c <main>
 350:	0c 94 ce 04 	jmp	0x99c	; 0x99c <_exit>

00000354 <__bad_interrupt>:
 354:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000358 <i2c_init>:
            break;
        case 64:
            TWSR = 0x3;
            break;
        default:
            TWSR = 0x00;
 358:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7f80b9>
            break;
    }
    TWBR = (uint8_t)SET_TWBR;
 35c:	88 e4       	ldi	r24, 0x48	; 72
 35e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7f80b8>
    // enable
    TWCR = (1 << TWEN);
 362:	84 e0       	ldi	r24, 0x04	; 4
 364:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 368:	08 95       	ret

0000036a <i2c_start>:
 
 Return Value: none
 **********************************************/
void i2c_start(uint8_t i2c_addr){
    // i2c start
    TWCR = (1 << TWINT)|(1 << TWSTA)|(1 << TWEN);
 36a:	94 ea       	ldi	r25, 0xA4	; 164
 36c:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
	uint16_t timeout = F_CPU/F_I2C*2.0;
 370:	20 e4       	ldi	r18, 0x40	; 64
 372:	31 e0       	ldi	r19, 0x01	; 1
    while((TWCR & (1 << TWINT)) == 0 &&
 374:	09 c0       	rjmp	.+18     	; 0x388 <i2c_start+0x1e>
		timeout !=0){
		timeout--;
 376:	21 50       	subi	r18, 0x01	; 1
 378:	31 09       	sbc	r19, r1
		if(timeout == 0){
 37a:	31 f4       	brne	.+12     	; 0x388 <i2c_start+0x1e>
			I2C_ErrorCode |= (1 << I2C_START);
 37c:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <I2C_ErrorCode>
 380:	81 60       	ori	r24, 0x01	; 1
 382:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <I2C_ErrorCode>
			return;
 386:	08 95       	ret
 **********************************************/
void i2c_start(uint8_t i2c_addr){
    // i2c start
    TWCR = (1 << TWINT)|(1 << TWSTA)|(1 << TWEN);
	uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
 388:	90 91 bc 00 	lds	r25, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 38c:	99 23       	and	r25, r25
 38e:	1c f0       	brlt	.+6      	; 0x396 <i2c_start+0x2c>
 390:	21 15       	cp	r18, r1
 392:	31 05       	cpc	r19, r1
 394:	81 f7       	brne	.-32     	; 0x376 <i2c_start+0xc>
			I2C_ErrorCode |= (1 << I2C_START);
			return;
		}
	};
    // send adress
    TWDR = i2c_addr;
 396:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    TWCR = (1 << TWINT)|( 1 << TWEN);
 39a:	84 e8       	ldi	r24, 0x84	; 132
 39c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    timeout = F_CPU/F_I2C*2.0;
 3a0:	80 e4       	ldi	r24, 0x40	; 64
 3a2:	91 e0       	ldi	r25, 0x01	; 1
    while((TWCR & (1 << TWINT)) == 0 &&
 3a4:	08 c0       	rjmp	.+16     	; 0x3b6 <i2c_start+0x4c>
		  timeout !=0){
		timeout--;
 3a6:	01 97       	sbiw	r24, 0x01	; 1
		if(timeout == 0){
 3a8:	31 f4       	brne	.+12     	; 0x3b6 <i2c_start+0x4c>
			I2C_ErrorCode |= (1 << I2C_SENDADRESS);
 3aa:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <I2C_ErrorCode>
 3ae:	82 60       	ori	r24, 0x02	; 2
 3b0:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <I2C_ErrorCode>
			return;
 3b4:	08 95       	ret
	};
    // send adress
    TWDR = i2c_addr;
    TWCR = (1 << TWINT)|( 1 << TWEN);
    timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
 3b6:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3ba:	22 23       	and	r18, r18
 3bc:	14 f0       	brlt	.+4      	; 0x3c2 <i2c_start+0x58>
 3be:	00 97       	sbiw	r24, 0x00	; 0
 3c0:	91 f7       	brne	.-28     	; 0x3a6 <i2c_start+0x3c>
 3c2:	08 95       	ret

000003c4 <i2c_stop>:
 
 Return Value: none
 **********************************************/
void i2c_stop(void){
    // i2c stop
    TWCR = (1 << TWINT)|(1 << TWSTO)|(1 << TWEN);
 3c4:	84 e9       	ldi	r24, 0x94	; 148
 3c6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3ca:	08 95       	ret

000003cc <i2c_byte>:
 - uint8_t byte: Byte to send to reciever
 
 Return Value: none
 **********************************************/
void i2c_byte(uint8_t byte){
    TWDR = byte;
 3cc:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7f80bb>
    TWCR = (1 << TWINT)|( 1 << TWEN);
 3d0:	84 e8       	ldi	r24, 0x84	; 132
 3d2:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
    uint16_t timeout = F_CPU/F_I2C*2.0;
 3d6:	80 e4       	ldi	r24, 0x40	; 64
 3d8:	91 e0       	ldi	r25, 0x01	; 1
    while((TWCR & (1 << TWINT)) == 0 &&
 3da:	08 c0       	rjmp	.+16     	; 0x3ec <i2c_byte+0x20>
		  timeout !=0){
		timeout--;
 3dc:	01 97       	sbiw	r24, 0x01	; 1
		if(timeout == 0){
 3de:	31 f4       	brne	.+12     	; 0x3ec <i2c_byte+0x20>
			I2C_ErrorCode |= (1 << I2C_BYTE);
 3e0:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <I2C_ErrorCode>
 3e4:	84 60       	ori	r24, 0x04	; 4
 3e6:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <I2C_ErrorCode>
			return;
 3ea:	08 95       	ret
 **********************************************/
void i2c_byte(uint8_t byte){
    TWDR = byte;
    TWCR = (1 << TWINT)|( 1 << TWEN);
    uint16_t timeout = F_CPU/F_I2C*2.0;
    while((TWCR & (1 << TWINT)) == 0 &&
 3ec:	20 91 bc 00 	lds	r18, 0x00BC	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7f80bc>
 3f0:	22 23       	and	r18, r18
 3f2:	14 f0       	brlt	.+4      	; 0x3f8 <i2c_byte+0x2c>
 3f4:	00 97       	sbiw	r24, 0x00	; 0
 3f6:	91 f7       	brne	.-28     	; 0x3dc <i2c_byte+0x10>
 3f8:	08 95       	ret

000003fa <lcd_command>:
            break;
    }
    
}
void lcd_charMode(uint8_t mode){
    charMode = mode;
 3fa:	0f 93       	push	r16
 3fc:	1f 93       	push	r17
 3fe:	cf 93       	push	r28
 400:	df 93       	push	r29
 402:	8c 01       	movw	r16, r24
 404:	d6 2f       	mov	r29, r22
 406:	88 e7       	ldi	r24, 0x78	; 120
 408:	0e 94 b5 01 	call	0x36a	; 0x36a <i2c_start>
 40c:	80 e0       	ldi	r24, 0x00	; 0
 40e:	0e 94 e6 01 	call	0x3cc	; 0x3cc <i2c_byte>
 412:	c0 e0       	ldi	r28, 0x00	; 0
 414:	07 c0       	rjmp	.+14     	; 0x424 <__EEPROM_REGION_LENGTH__+0x24>
 416:	f8 01       	movw	r30, r16
 418:	ec 0f       	add	r30, r28
 41a:	f1 1d       	adc	r31, r1
 41c:	80 81       	ld	r24, Z
 41e:	0e 94 e6 01 	call	0x3cc	; 0x3cc <i2c_byte>
 422:	cf 5f       	subi	r28, 0xFF	; 255
 424:	cd 17       	cp	r28, r29
 426:	b8 f3       	brcs	.-18     	; 0x416 <__EEPROM_REGION_LENGTH__+0x16>
 428:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <i2c_stop>
 42c:	df 91       	pop	r29
 42e:	cf 91       	pop	r28
 430:	1f 91       	pop	r17
 432:	0f 91       	pop	r16
 434:	08 95       	ret

00000436 <lcd_data>:
 436:	ef 92       	push	r14
 438:	ff 92       	push	r15
 43a:	0f 93       	push	r16
 43c:	1f 93       	push	r17
 43e:	cf 93       	push	r28
 440:	df 93       	push	r29
 442:	7c 01       	movw	r14, r24
 444:	8b 01       	movw	r16, r22
 446:	88 e7       	ldi	r24, 0x78	; 120
 448:	0e 94 b5 01 	call	0x36a	; 0x36a <i2c_start>
 44c:	80 e4       	ldi	r24, 0x40	; 64
 44e:	0e 94 e6 01 	call	0x3cc	; 0x3cc <i2c_byte>
 452:	c0 e0       	ldi	r28, 0x00	; 0
 454:	d0 e0       	ldi	r29, 0x00	; 0
 456:	07 c0       	rjmp	.+14     	; 0x466 <lcd_data+0x30>
 458:	f7 01       	movw	r30, r14
 45a:	ec 0f       	add	r30, r28
 45c:	fd 1f       	adc	r31, r29
 45e:	80 81       	ld	r24, Z
 460:	0e 94 e6 01 	call	0x3cc	; 0x3cc <i2c_byte>
 464:	21 96       	adiw	r28, 0x01	; 1
 466:	c0 17       	cp	r28, r16
 468:	d1 07       	cpc	r29, r17
 46a:	b0 f3       	brcs	.-20     	; 0x458 <lcd_data+0x22>
 46c:	0e 94 e2 01 	call	0x3c4	; 0x3c4 <i2c_stop>
 470:	df 91       	pop	r29
 472:	cf 91       	pop	r28
 474:	1f 91       	pop	r17
 476:	0f 91       	pop	r16
 478:	ff 90       	pop	r15
 47a:	ef 90       	pop	r14
 47c:	08 95       	ret

0000047e <lcd_goto_xpix_y>:
 47e:	cf 93       	push	r28
 480:	df 93       	push	r29
 482:	00 d0       	rcall	.+0      	; 0x484 <lcd_goto_xpix_y+0x6>
 484:	00 d0       	rcall	.+0      	; 0x486 <lcd_goto_xpix_y+0x8>
 486:	1f 92       	push	r1
 488:	cd b7       	in	r28, 0x3d	; 61
 48a:	de b7       	in	r29, 0x3e	; 62
 48c:	81 38       	cpi	r24, 0x81	; 129
 48e:	18 f5       	brcc	.+70     	; 0x4d6 <lcd_goto_xpix_y+0x58>
 490:	68 30       	cpi	r22, 0x08	; 8
 492:	08 f5       	brcc	.+66     	; 0x4d6 <lcd_goto_xpix_y+0x58>
 494:	ea e2       	ldi	r30, 0x2A	; 42
 496:	f1 e0       	ldi	r31, 0x01	; 1
 498:	80 83       	st	Z, r24
 49a:	61 83       	std	Z+1, r22	; 0x01
 49c:	60 55       	subi	r22, 0x50	; 80
 49e:	69 83       	std	Y+1, r22	; 0x01
 4a0:	91 e2       	ldi	r25, 0x21	; 33
 4a2:	9a 83       	std	Y+2, r25	; 0x02
 4a4:	92 e0       	ldi	r25, 0x02	; 2
 4a6:	98 0f       	add	r25, r24
 4a8:	9f 70       	andi	r25, 0x0F	; 15
 4aa:	9b 83       	std	Y+3, r25	; 0x03
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	02 96       	adiw	r24, 0x02	; 2
 4b0:	80 7f       	andi	r24, 0xF0	; 240
 4b2:	99 27       	eor	r25, r25
 4b4:	95 95       	asr	r25
 4b6:	87 95       	ror	r24
 4b8:	95 95       	asr	r25
 4ba:	87 95       	ror	r24
 4bc:	95 95       	asr	r25
 4be:	87 95       	ror	r24
 4c0:	95 95       	asr	r25
 4c2:	87 95       	ror	r24
 4c4:	80 5f       	subi	r24, 0xF0	; 240
 4c6:	8c 83       	std	Y+4, r24	; 0x04
 4c8:	8f e7       	ldi	r24, 0x7F	; 127
 4ca:	8d 83       	std	Y+5, r24	; 0x05
 4cc:	65 e0       	ldi	r22, 0x05	; 5
 4ce:	ce 01       	movw	r24, r28
 4d0:	01 96       	adiw	r24, 0x01	; 1
 4d2:	0e 94 fd 01 	call	0x3fa	; 0x3fa <lcd_command>
 4d6:	0f 90       	pop	r0
 4d8:	0f 90       	pop	r0
 4da:	0f 90       	pop	r0
 4dc:	0f 90       	pop	r0
 4de:	0f 90       	pop	r0
 4e0:	df 91       	pop	r29
 4e2:	cf 91       	pop	r28
 4e4:	08 95       	ret

000004e6 <lcd_gotoxy>:
 4e6:	98 2f       	mov	r25, r24
 4e8:	99 0f       	add	r25, r25
 4ea:	98 0f       	add	r25, r24
 4ec:	89 2f       	mov	r24, r25
 4ee:	88 0f       	add	r24, r24
 4f0:	0e 94 3f 02 	call	0x47e	; 0x47e <lcd_goto_xpix_y>
 4f4:	08 95       	ret

000004f6 <lcd_home>:
 4f6:	60 e0       	ldi	r22, 0x00	; 0
 4f8:	80 e0       	ldi	r24, 0x00	; 0
 4fa:	0e 94 73 02 	call	0x4e6	; 0x4e6 <lcd_gotoxy>
 4fe:	08 95       	ret

00000500 <lcd_clrscr>:
 500:	1f 93       	push	r17
 502:	cf 93       	push	r28
 504:	df 93       	push	r29
 506:	cd b7       	in	r28, 0x3d	; 61
 508:	de b7       	in	r29, 0x3e	; 62
 50a:	c0 58       	subi	r28, 0x80	; 128
 50c:	d1 09       	sbc	r29, r1
 50e:	0f b6       	in	r0, 0x3f	; 63
 510:	f8 94       	cli
 512:	de bf       	out	0x3e, r29	; 62
 514:	0f be       	out	0x3f, r0	; 63
 516:	cd bf       	out	0x3d, r28	; 61
 518:	fe 01       	movw	r30, r28
 51a:	31 96       	adiw	r30, 0x01	; 1
 51c:	80 e8       	ldi	r24, 0x80	; 128
 51e:	df 01       	movw	r26, r30
 520:	1d 92       	st	X+, r1
 522:	8a 95       	dec	r24
 524:	e9 f7       	brne	.-6      	; 0x520 <lcd_clrscr+0x20>
 526:	10 e0       	ldi	r17, 0x00	; 0
 528:	0b c0       	rjmp	.+22     	; 0x540 <lcd_clrscr+0x40>
 52a:	61 2f       	mov	r22, r17
 52c:	80 e0       	ldi	r24, 0x00	; 0
 52e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <lcd_gotoxy>
 532:	60 e8       	ldi	r22, 0x80	; 128
 534:	70 e0       	ldi	r23, 0x00	; 0
 536:	ce 01       	movw	r24, r28
 538:	01 96       	adiw	r24, 0x01	; 1
 53a:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_data>
 53e:	1f 5f       	subi	r17, 0xFF	; 255
 540:	18 30       	cpi	r17, 0x08	; 8
 542:	98 f3       	brcs	.-26     	; 0x52a <lcd_clrscr+0x2a>
 544:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <lcd_home>
 548:	c0 58       	subi	r28, 0x80	; 128
 54a:	df 4f       	sbci	r29, 0xFF	; 255
 54c:	0f b6       	in	r0, 0x3f	; 63
 54e:	f8 94       	cli
 550:	de bf       	out	0x3e, r29	; 62
 552:	0f be       	out	0x3f, r0	; 63
 554:	cd bf       	out	0x3d, r28	; 61
 556:	df 91       	pop	r29
 558:	cf 91       	pop	r28
 55a:	1f 91       	pop	r17
 55c:	08 95       	ret

0000055e <lcd_init>:
 55e:	1f 93       	push	r17
 560:	cf 93       	push	r28
 562:	df 93       	push	r29
 564:	cd b7       	in	r28, 0x3d	; 61
 566:	de b7       	in	r29, 0x3e	; 62
 568:	6c 97       	sbiw	r28, 0x1c	; 28
 56a:	0f b6       	in	r0, 0x3f	; 63
 56c:	f8 94       	cli
 56e:	de bf       	out	0x3e, r29	; 62
 570:	0f be       	out	0x3f, r0	; 63
 572:	cd bf       	out	0x3d, r28	; 61
 574:	18 2f       	mov	r17, r24
 576:	0e 94 ac 01 	call	0x358	; 0x358 <i2c_init>
 57a:	20 e0       	ldi	r18, 0x00	; 0
 57c:	0e c0       	rjmp	.+28     	; 0x59a <lcd_init+0x3c>
 57e:	82 2f       	mov	r24, r18
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	fc 01       	movw	r30, r24
 584:	e4 51       	subi	r30, 0x14	; 20
 586:	fd 4f       	sbci	r31, 0xFD	; 253
 588:	e4 91       	lpm	r30, Z
 58a:	a1 e0       	ldi	r26, 0x01	; 1
 58c:	b0 e0       	ldi	r27, 0x00	; 0
 58e:	ac 0f       	add	r26, r28
 590:	bd 1f       	adc	r27, r29
 592:	a8 0f       	add	r26, r24
 594:	b9 1f       	adc	r27, r25
 596:	ec 93       	st	X, r30
 598:	2f 5f       	subi	r18, 0xFF	; 255
 59a:	2b 31       	cpi	r18, 0x1B	; 27
 59c:	80 f3       	brcs	.-32     	; 0x57e <lcd_init+0x20>
 59e:	1c 8f       	std	Y+28, r17	; 0x1c
 5a0:	6c e1       	ldi	r22, 0x1C	; 28
 5a2:	ce 01       	movw	r24, r28
 5a4:	01 96       	adiw	r24, 0x01	; 1
 5a6:	0e 94 fd 01 	call	0x3fa	; 0x3fa <lcd_command>
 5aa:	0e 94 80 02 	call	0x500	; 0x500 <lcd_clrscr>
 5ae:	6c 96       	adiw	r28, 0x1c	; 28
 5b0:	0f b6       	in	r0, 0x3f	; 63
 5b2:	f8 94       	cli
 5b4:	de bf       	out	0x3e, r29	; 62
 5b6:	0f be       	out	0x3f, r0	; 63
 5b8:	cd bf       	out	0x3d, r28	; 61
 5ba:	df 91       	pop	r29
 5bc:	cf 91       	pop	r28
 5be:	1f 91       	pop	r17
 5c0:	08 95       	ret

000005c2 <lcd_putc>:
 5c2:	cf 92       	push	r12
 5c4:	df 92       	push	r13
 5c6:	ef 92       	push	r14
 5c8:	ff 92       	push	r15
 5ca:	0f 93       	push	r16
 5cc:	1f 93       	push	r17
 5ce:	cf 93       	push	r28
 5d0:	df 93       	push	r29
 5d2:	cd b7       	in	r28, 0x3d	; 61
 5d4:	de b7       	in	r29, 0x3e	; 62
 5d6:	6d 97       	sbiw	r28, 0x1d	; 29
 5d8:	0f b6       	in	r0, 0x3f	; 63
 5da:	f8 94       	cli
 5dc:	de bf       	out	0x3e, r29	; 62
 5de:	0f be       	out	0x3f, r0	; 63
 5e0:	cd bf       	out	0x3d, r28	; 61
 5e2:	89 30       	cpi	r24, 0x09	; 9
 5e4:	01 f1       	breq	.+64     	; 0x626 <lcd_putc+0x64>
 5e6:	18 f4       	brcc	.+6      	; 0x5ee <lcd_putc+0x2c>
 5e8:	88 30       	cpi	r24, 0x08	; 8
 5ea:	39 f0       	breq	.+14     	; 0x5fa <lcd_putc+0x38>
 5ec:	52 c0       	rjmp	.+164    	; 0x692 <lcd_putc+0xd0>
 5ee:	8a 30       	cpi	r24, 0x0A	; 10
 5f0:	e9 f1       	breq	.+122    	; 0x66c <lcd_putc+0xaa>
 5f2:	8d 30       	cpi	r24, 0x0D	; 13
 5f4:	09 f4       	brne	.+2      	; 0x5f8 <lcd_putc+0x36>
 5f6:	47 c0       	rjmp	.+142    	; 0x686 <lcd_putc+0xc4>
 5f8:	4c c0       	rjmp	.+152    	; 0x692 <lcd_putc+0xd0>
 5fa:	0a e2       	ldi	r16, 0x2A	; 42
 5fc:	11 e0       	ldi	r17, 0x01	; 1
 5fe:	f8 01       	movw	r30, r16
 600:	80 81       	ld	r24, Z
 602:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 606:	61 81       	ldd	r22, Z+1	; 0x01
 608:	89 1b       	sub	r24, r25
 60a:	0e 94 73 02 	call	0x4e6	; 0x4e6 <lcd_gotoxy>
 60e:	80 e2       	ldi	r24, 0x20	; 32
 610:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <lcd_putc>
 614:	f8 01       	movw	r30, r16
 616:	80 81       	ld	r24, Z
 618:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 61c:	61 81       	ldd	r22, Z+1	; 0x01
 61e:	89 1b       	sub	r24, r25
 620:	0e 94 73 02 	call	0x4e6	; 0x4e6 <lcd_gotoxy>
 624:	78 c1       	rjmp	.+752    	; 0x916 <__stack+0x17>
 626:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
 62a:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 62e:	29 2f       	mov	r18, r25
 630:	30 e0       	ldi	r19, 0x00	; 0
 632:	22 0f       	add	r18, r18
 634:	33 1f       	adc	r19, r19
 636:	22 0f       	add	r18, r18
 638:	33 1f       	adc	r19, r19
 63a:	b9 01       	movw	r22, r18
 63c:	68 0f       	add	r22, r24
 63e:	71 1d       	adc	r23, r1
 640:	45 e1       	ldi	r20, 0x15	; 21
 642:	50 e0       	ldi	r21, 0x00	; 0
 644:	fa 01       	movw	r30, r20
 646:	e2 1b       	sub	r30, r18
 648:	f3 0b       	sbc	r31, r19
 64a:	6e 17       	cp	r22, r30
 64c:	7f 07       	cpc	r23, r31
 64e:	40 f4       	brcc	.+16     	; 0x660 <lcd_putc+0x9e>
 650:	99 0f       	add	r25, r25
 652:	99 0f       	add	r25, r25
 654:	60 91 2b 01 	lds	r22, 0x012B	; 0x80012b <__data_end+0x1>
 658:	89 0f       	add	r24, r25
 65a:	0e 94 73 02 	call	0x4e6	; 0x4e6 <lcd_gotoxy>
 65e:	5b c1       	rjmp	.+694    	; 0x916 <__stack+0x17>
 660:	60 91 2b 01 	lds	r22, 0x012B	; 0x80012b <__data_end+0x1>
 664:	85 e1       	ldi	r24, 0x15	; 21
 666:	0e 94 73 02 	call	0x4e6	; 0x4e6 <lcd_gotoxy>
 66a:	55 c1       	rjmp	.+682    	; 0x916 <__stack+0x17>
 66c:	80 91 2b 01 	lds	r24, 0x012B	; 0x80012b <__data_end+0x1>
 670:	87 30       	cpi	r24, 0x07	; 7
 672:	08 f0       	brcs	.+2      	; 0x676 <lcd_putc+0xb4>
 674:	50 c1       	rjmp	.+672    	; 0x916 <__stack+0x17>
 676:	60 91 00 01 	lds	r22, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 67a:	68 0f       	add	r22, r24
 67c:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
 680:	0e 94 73 02 	call	0x4e6	; 0x4e6 <lcd_gotoxy>
 684:	48 c1       	rjmp	.+656    	; 0x916 <__stack+0x17>
 686:	60 91 2b 01 	lds	r22, 0x012B	; 0x80012b <__data_end+0x1>
 68a:	80 e0       	ldi	r24, 0x00	; 0
 68c:	0e 94 73 02 	call	0x4e6	; 0x4e6 <lcd_gotoxy>
 690:	42 c1       	rjmp	.+644    	; 0x916 <__stack+0x17>
 692:	50 91 2a 01 	lds	r21, 0x012A	; 0x80012a <__data_end>
 696:	5a 37       	cpi	r21, 0x7A	; 122
 698:	08 f0       	brcs	.+2      	; 0x69c <lcd_putc+0xda>
 69a:	3d c1       	rjmp	.+634    	; 0x916 <__stack+0x17>
 69c:	80 32       	cpi	r24, 0x20	; 32
 69e:	08 f4       	brcc	.+2      	; 0x6a2 <lcd_putc+0xe0>
 6a0:	3a c1       	rjmp	.+628    	; 0x916 <__stack+0x17>
 6a2:	80 52       	subi	r24, 0x20	; 32
 6a4:	e9 e6       	ldi	r30, 0x69	; 105
 6a6:	f0 e0       	ldi	r31, 0x00	; 0
 6a8:	e4 91       	lpm	r30, Z
 6aa:	8e 17       	cp	r24, r30
 6ac:	98 f4       	brcc	.+38     	; 0x6d4 <lcd_putc+0x112>
 6ae:	23 c0       	rjmp	.+70     	; 0x6f6 <lcd_putc+0x134>
 6b0:	f9 01       	movw	r30, r18
 6b2:	ee 0f       	add	r30, r30
 6b4:	ff 1f       	adc	r31, r31
 6b6:	e8 59       	subi	r30, 0x98	; 152
 6b8:	ff 4f       	sbci	r31, 0xFF	; 255
 6ba:	e4 91       	lpm	r30, Z
 6bc:	f0 e0       	ldi	r31, 0x00	; 0
 6be:	b0 97       	sbiw	r30, 0x20	; 32
 6c0:	28 2f       	mov	r18, r24
 6c2:	30 e0       	ldi	r19, 0x00	; 0
 6c4:	e2 17       	cp	r30, r18
 6c6:	f3 07       	cpc	r31, r19
 6c8:	19 f4       	brne	.+6      	; 0x6d0 <lcd_putc+0x10e>
 6ca:	fb 01       	movw	r30, r22
 6cc:	84 91       	lpm	r24, Z
 6ce:	10 c0       	rjmp	.+32     	; 0x6f0 <lcd_putc+0x12e>
 6d0:	9f 5f       	subi	r25, 0xFF	; 255
 6d2:	01 c0       	rjmp	.+2      	; 0x6d6 <lcd_putc+0x114>
 6d4:	90 e0       	ldi	r25, 0x00	; 0
 6d6:	29 2f       	mov	r18, r25
 6d8:	30 e0       	ldi	r19, 0x00	; 0
 6da:	f9 01       	movw	r30, r18
 6dc:	ee 0f       	add	r30, r30
 6de:	ff 1f       	adc	r31, r31
 6e0:	bf 01       	movw	r22, r30
 6e2:	67 59       	subi	r22, 0x97	; 151
 6e4:	7f 4f       	sbci	r23, 0xFF	; 255
 6e6:	fb 01       	movw	r30, r22
 6e8:	44 91       	lpm	r20, Z
 6ea:	4f 3f       	cpi	r20, 0xFF	; 255
 6ec:	09 f7       	brne	.-62     	; 0x6b0 <lcd_putc+0xee>
 6ee:	8f ef       	ldi	r24, 0xFF	; 255
 6f0:	8f 3f       	cpi	r24, 0xFF	; 255
 6f2:	09 f4       	brne	.+2      	; 0x6f6 <lcd_putc+0x134>
 6f4:	10 c1       	rjmp	.+544    	; 0x916 <__stack+0x17>
 6f6:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 6fa:	92 30       	cpi	r25, 0x02	; 2
 6fc:	09 f0       	breq	.+2      	; 0x700 <lcd_putc+0x13e>
 6fe:	dd c0       	rjmp	.+442    	; 0x8ba <__DATA_REGION_LENGTH__+0xba>
 700:	25 2f       	mov	r18, r21
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	24 5f       	subi	r18, 0xF4	; 244
 706:	3f 4f       	sbci	r19, 0xFF	; 255
 708:	21 38       	cpi	r18, 0x81	; 129
 70a:	31 05       	cpc	r19, r1
 70c:	08 f0       	brcs	.+2      	; 0x710 <lcd_putc+0x14e>
 70e:	03 c1       	rjmp	.+518    	; 0x916 <__stack+0x17>
 710:	f1 2c       	mov	r15, r1
 712:	4f c0       	rjmp	.+158    	; 0x7b2 <lcd_putc+0x1f0>
 714:	6f 2d       	mov	r22, r15
 716:	70 e0       	ldi	r23, 0x00	; 0
 718:	fb 01       	movw	r30, r22
 71a:	ee 0f       	add	r30, r30
 71c:	ff 1f       	adc	r31, r31
 71e:	21 e0       	ldi	r18, 0x01	; 1
 720:	30 e0       	ldi	r19, 0x00	; 0
 722:	2c 0f       	add	r18, r28
 724:	3d 1f       	adc	r19, r29
 726:	e2 0f       	add	r30, r18
 728:	f3 1f       	adc	r31, r19
 72a:	15 86       	std	Z+13, r1	; 0x0d
 72c:	14 86       	std	Z+12, r1	; 0x0c
 72e:	28 2f       	mov	r18, r24
 730:	30 e0       	ldi	r19, 0x00	; 0
 732:	f9 01       	movw	r30, r18
 734:	ee 0f       	add	r30, r30
 736:	ff 1f       	adc	r31, r31
 738:	e2 0f       	add	r30, r18
 73a:	f3 1f       	adc	r31, r19
 73c:	ee 0f       	add	r30, r30
 73e:	ff 1f       	adc	r31, r31
 740:	e6 0f       	add	r30, r22
 742:	f7 1f       	adc	r31, r23
 744:	e4 58       	subi	r30, 0x84	; 132
 746:	ff 4f       	sbci	r31, 0xFF	; 255
 748:	e4 90       	lpm	r14, Z
 74a:	90 e0       	ldi	r25, 0x00	; 0
 74c:	2f c0       	rjmp	.+94     	; 0x7ac <lcd_putc+0x1ea>
 74e:	a9 2f       	mov	r26, r25
 750:	b0 e0       	ldi	r27, 0x00	; 0
 752:	2e 2d       	mov	r18, r14
 754:	30 e0       	ldi	r19, 0x00	; 0
 756:	09 2e       	mov	r0, r25
 758:	02 c0       	rjmp	.+4      	; 0x75e <lcd_putc+0x19c>
 75a:	35 95       	asr	r19
 75c:	27 95       	ror	r18
 75e:	0a 94       	dec	r0
 760:	e2 f7       	brpl	.-8      	; 0x75a <lcd_putc+0x198>
 762:	20 ff       	sbrs	r18, 0
 764:	22 c0       	rjmp	.+68     	; 0x7aa <lcd_putc+0x1e8>
 766:	aa 0f       	add	r26, r26
 768:	bb 1f       	adc	r27, r27
 76a:	21 e0       	ldi	r18, 0x01	; 1
 76c:	30 e0       	ldi	r19, 0x00	; 0
 76e:	69 01       	movw	r12, r18
 770:	0a 2e       	mov	r0, r26
 772:	02 c0       	rjmp	.+4      	; 0x778 <lcd_putc+0x1b6>
 774:	cc 0c       	add	r12, r12
 776:	dd 1c       	adc	r13, r13
 778:	0a 94       	dec	r0
 77a:	e2 f7       	brpl	.-8      	; 0x774 <lcd_putc+0x1b2>
 77c:	8b 01       	movw	r16, r22
 77e:	00 0f       	add	r16, r16
 780:	11 1f       	adc	r17, r17
 782:	e1 e0       	ldi	r30, 0x01	; 1
 784:	f0 e0       	ldi	r31, 0x00	; 0
 786:	ec 0f       	add	r30, r28
 788:	fd 1f       	adc	r31, r29
 78a:	e0 0f       	add	r30, r16
 78c:	f1 1f       	adc	r31, r17
 78e:	44 85       	ldd	r20, Z+12	; 0x0c
 790:	55 85       	ldd	r21, Z+13	; 0x0d
 792:	4c 29       	or	r20, r12
 794:	5d 29       	or	r21, r13
 796:	11 96       	adiw	r26, 0x01	; 1
 798:	02 c0       	rjmp	.+4      	; 0x79e <lcd_putc+0x1dc>
 79a:	22 0f       	add	r18, r18
 79c:	33 1f       	adc	r19, r19
 79e:	aa 95       	dec	r26
 7a0:	e2 f7       	brpl	.-8      	; 0x79a <lcd_putc+0x1d8>
 7a2:	24 2b       	or	r18, r20
 7a4:	35 2b       	or	r19, r21
 7a6:	35 87       	std	Z+13, r19	; 0x0d
 7a8:	24 87       	std	Z+12, r18	; 0x0c
 7aa:	9f 5f       	subi	r25, 0xFF	; 255
 7ac:	98 30       	cpi	r25, 0x08	; 8
 7ae:	78 f2       	brcs	.-98     	; 0x74e <lcd_putc+0x18c>
 7b0:	f3 94       	inc	r15
 7b2:	35 e0       	ldi	r19, 0x05	; 5
 7b4:	3f 15       	cp	r19, r15
 7b6:	08 f0       	brcs	.+2      	; 0x7ba <lcd_putc+0x1f8>
 7b8:	ad cf       	rjmp	.-166    	; 0x714 <lcd_putc+0x152>
 7ba:	20 e0       	ldi	r18, 0x00	; 0
 7bc:	15 c0       	rjmp	.+42     	; 0x7e8 <lcd_putc+0x226>
 7be:	82 2f       	mov	r24, r18
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	88 0f       	add	r24, r24
 7c4:	99 1f       	adc	r25, r25
 7c6:	e1 e0       	ldi	r30, 0x01	; 1
 7c8:	f0 e0       	ldi	r31, 0x00	; 0
 7ca:	ec 0f       	add	r30, r28
 7cc:	fd 1f       	adc	r31, r29
 7ce:	e8 0f       	add	r30, r24
 7d0:	f9 1f       	adc	r31, r25
 7d2:	34 85       	ldd	r19, Z+12	; 0x0c
 7d4:	30 83       	st	Z, r19
 7d6:	01 96       	adiw	r24, 0x01	; 1
 7d8:	e1 e0       	ldi	r30, 0x01	; 1
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	ec 0f       	add	r30, r28
 7de:	fd 1f       	adc	r31, r29
 7e0:	e8 0f       	add	r30, r24
 7e2:	f9 1f       	adc	r31, r25
 7e4:	30 83       	st	Z, r19
 7e6:	2f 5f       	subi	r18, 0xFF	; 255
 7e8:	26 30       	cpi	r18, 0x06	; 6
 7ea:	48 f3       	brcs	.-46     	; 0x7be <lcd_putc+0x1fc>
 7ec:	6c e0       	ldi	r22, 0x0C	; 12
 7ee:	70 e0       	ldi	r23, 0x00	; 0
 7f0:	ce 01       	movw	r24, r28
 7f2:	01 96       	adiw	r24, 0x01	; 1
 7f4:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_data>
 7f8:	ea e2       	ldi	r30, 0x2A	; 42
 7fa:	f1 e0       	ldi	r31, 0x01	; 1
 7fc:	81 81       	ldd	r24, Z+1	; 0x01
 7fe:	8f 54       	subi	r24, 0x4F	; 79
 800:	89 8f       	std	Y+25, r24	; 0x19
 802:	81 e2       	ldi	r24, 0x21	; 33
 804:	8a 8f       	std	Y+26, r24	; 0x1a
 806:	80 81       	ld	r24, Z
 808:	92 e0       	ldi	r25, 0x02	; 2
 80a:	98 0f       	add	r25, r24
 80c:	9f 70       	andi	r25, 0x0F	; 15
 80e:	9b 8f       	std	Y+27, r25	; 0x1b
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	02 96       	adiw	r24, 0x02	; 2
 814:	80 7f       	andi	r24, 0xF0	; 240
 816:	99 27       	eor	r25, r25
 818:	95 95       	asr	r25
 81a:	87 95       	ror	r24
 81c:	95 95       	asr	r25
 81e:	87 95       	ror	r24
 820:	95 95       	asr	r25
 822:	87 95       	ror	r24
 824:	95 95       	asr	r25
 826:	87 95       	ror	r24
 828:	80 5f       	subi	r24, 0xF0	; 240
 82a:	8c 8f       	std	Y+28, r24	; 0x1c
 82c:	8f e7       	ldi	r24, 0x7F	; 127
 82e:	8d 8f       	std	Y+29, r24	; 0x1d
 830:	65 e0       	ldi	r22, 0x05	; 5
 832:	ce 01       	movw	r24, r28
 834:	49 96       	adiw	r24, 0x19	; 25
 836:	0e 94 fd 01 	call	0x3fa	; 0x3fa <lcd_command>
 83a:	20 e0       	ldi	r18, 0x00	; 0
 83c:	15 c0       	rjmp	.+42     	; 0x868 <__DATA_REGION_LENGTH__+0x68>
 83e:	82 2f       	mov	r24, r18
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	88 0f       	add	r24, r24
 844:	99 1f       	adc	r25, r25
 846:	e1 e0       	ldi	r30, 0x01	; 1
 848:	f0 e0       	ldi	r31, 0x00	; 0
 84a:	ec 0f       	add	r30, r28
 84c:	fd 1f       	adc	r31, r29
 84e:	e8 0f       	add	r30, r24
 850:	f9 1f       	adc	r31, r25
 852:	35 85       	ldd	r19, Z+13	; 0x0d
 854:	30 83       	st	Z, r19
 856:	01 96       	adiw	r24, 0x01	; 1
 858:	e1 e0       	ldi	r30, 0x01	; 1
 85a:	f0 e0       	ldi	r31, 0x00	; 0
 85c:	ec 0f       	add	r30, r28
 85e:	fd 1f       	adc	r31, r29
 860:	e8 0f       	add	r30, r24
 862:	f9 1f       	adc	r31, r25
 864:	30 83       	st	Z, r19
 866:	2f 5f       	subi	r18, 0xFF	; 255
 868:	26 30       	cpi	r18, 0x06	; 6
 86a:	48 f3       	brcs	.-46     	; 0x83e <__DATA_REGION_LENGTH__+0x3e>
 86c:	6c e0       	ldi	r22, 0x0C	; 12
 86e:	70 e0       	ldi	r23, 0x00	; 0
 870:	ce 01       	movw	r24, r28
 872:	01 96       	adiw	r24, 0x01	; 1
 874:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_data>
 878:	0a e2       	ldi	r16, 0x2A	; 42
 87a:	11 e0       	ldi	r17, 0x01	; 1
 87c:	f8 01       	movw	r30, r16
 87e:	81 81       	ldd	r24, Z+1	; 0x01
 880:	80 55       	subi	r24, 0x50	; 80
 882:	89 8f       	std	Y+25, r24	; 0x19
 884:	80 81       	ld	r24, Z
 886:	9e e0       	ldi	r25, 0x0E	; 14
 888:	98 0f       	add	r25, r24
 88a:	9f 70       	andi	r25, 0x0F	; 15
 88c:	9b 8f       	std	Y+27, r25	; 0x1b
 88e:	90 e0       	ldi	r25, 0x00	; 0
 890:	0e 96       	adiw	r24, 0x0e	; 14
 892:	80 7f       	andi	r24, 0xF0	; 240
 894:	99 27       	eor	r25, r25
 896:	92 95       	swap	r25
 898:	82 95       	swap	r24
 89a:	8f 70       	andi	r24, 0x0F	; 15
 89c:	89 27       	eor	r24, r25
 89e:	9f 70       	andi	r25, 0x0F	; 15
 8a0:	89 27       	eor	r24, r25
 8a2:	80 5f       	subi	r24, 0xF0	; 240
 8a4:	8c 8f       	std	Y+28, r24	; 0x1c
 8a6:	65 e0       	ldi	r22, 0x05	; 5
 8a8:	ce 01       	movw	r24, r28
 8aa:	49 96       	adiw	r24, 0x19	; 25
 8ac:	0e 94 fd 01 	call	0x3fa	; 0x3fa <lcd_command>
 8b0:	f8 01       	movw	r30, r16
 8b2:	80 81       	ld	r24, Z
 8b4:	84 5f       	subi	r24, 0xF4	; 244
 8b6:	80 83       	st	Z, r24
 8b8:	2e c0       	rjmp	.+92     	; 0x916 <__stack+0x17>
 8ba:	25 2f       	mov	r18, r21
 8bc:	30 e0       	ldi	r19, 0x00	; 0
 8be:	2a 5f       	subi	r18, 0xFA	; 250
 8c0:	3f 4f       	sbci	r19, 0xFF	; 255
 8c2:	21 38       	cpi	r18, 0x81	; 129
 8c4:	31 05       	cpc	r19, r1
 8c6:	38 f5       	brcc	.+78     	; 0x916 <__stack+0x17>
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	18 c0       	rjmp	.+48     	; 0x8fc <__DATA_REGION_LENGTH__+0xfc>
 8cc:	28 2f       	mov	r18, r24
 8ce:	30 e0       	ldi	r19, 0x00	; 0
 8d0:	49 2f       	mov	r20, r25
 8d2:	50 e0       	ldi	r21, 0x00	; 0
 8d4:	f9 01       	movw	r30, r18
 8d6:	ee 0f       	add	r30, r30
 8d8:	ff 1f       	adc	r31, r31
 8da:	e2 0f       	add	r30, r18
 8dc:	f3 1f       	adc	r31, r19
 8de:	ee 0f       	add	r30, r30
 8e0:	ff 1f       	adc	r31, r31
 8e2:	e4 0f       	add	r30, r20
 8e4:	f5 1f       	adc	r31, r21
 8e6:	e4 58       	subi	r30, 0x84	; 132
 8e8:	ff 4f       	sbci	r31, 0xFF	; 255
 8ea:	e4 91       	lpm	r30, Z
 8ec:	a1 e0       	ldi	r26, 0x01	; 1
 8ee:	b0 e0       	ldi	r27, 0x00	; 0
 8f0:	ac 0f       	add	r26, r28
 8f2:	bd 1f       	adc	r27, r29
 8f4:	a4 0f       	add	r26, r20
 8f6:	b5 1f       	adc	r27, r21
 8f8:	ec 93       	st	X, r30
 8fa:	9f 5f       	subi	r25, 0xFF	; 255
 8fc:	96 30       	cpi	r25, 0x06	; 6
 8fe:	30 f3       	brcs	.-52     	; 0x8cc <__DATA_REGION_LENGTH__+0xcc>
 900:	66 e0       	ldi	r22, 0x06	; 6
 902:	70 e0       	ldi	r23, 0x00	; 0
 904:	ce 01       	movw	r24, r28
 906:	01 96       	adiw	r24, 0x01	; 1
 908:	0e 94 1b 02 	call	0x436	; 0x436 <lcd_data>
 90c:	ea e2       	ldi	r30, 0x2A	; 42
 90e:	f1 e0       	ldi	r31, 0x01	; 1
 910:	80 81       	ld	r24, Z
 912:	8a 5f       	subi	r24, 0xFA	; 250
 914:	80 83       	st	Z, r24
 916:	6d 96       	adiw	r28, 0x1d	; 29
 918:	0f b6       	in	r0, 0x3f	; 63
 91a:	f8 94       	cli
 91c:	de bf       	out	0x3e, r29	; 62
 91e:	0f be       	out	0x3f, r0	; 63
 920:	cd bf       	out	0x3d, r28	; 61
 922:	df 91       	pop	r29
 924:	cf 91       	pop	r28
 926:	1f 91       	pop	r17
 928:	0f 91       	pop	r16
 92a:	ff 90       	pop	r15
 92c:	ef 90       	pop	r14
 92e:	df 90       	pop	r13
 930:	cf 90       	pop	r12
 932:	08 95       	ret

00000934 <lcd_puts>:
}
void lcd_puts(const char* s){
 934:	cf 93       	push	r28
 936:	df 93       	push	r29
 938:	ec 01       	movw	r28, r24
    while (*s) {
 93a:	03 c0       	rjmp	.+6      	; 0x942 <lcd_puts+0xe>
        lcd_putc(*s++);
 93c:	21 96       	adiw	r28, 0x01	; 1
 93e:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <lcd_putc>
}
void lcd_charMode(uint8_t mode){
    charMode = mode;
}
void lcd_puts(const char* s){
    while (*s) {
 942:	88 81       	ld	r24, Y
 944:	81 11       	cpse	r24, r1
 946:	fa cf       	rjmp	.-12     	; 0x93c <lcd_puts+0x8>
        lcd_putc(*s++);
    }
}
 948:	df 91       	pop	r29
 94a:	cf 91       	pop	r28
 94c:	08 95       	ret

0000094e <lcd_puts_p>:
void lcd_puts_p(const char* progmem_s){
 94e:	cf 93       	push	r28
 950:	df 93       	push	r29
 952:	fc 01       	movw	r30, r24
    register uint8_t c;
    while ((c = pgm_read_byte(progmem_s++))) {
 954:	03 c0       	rjmp	.+6      	; 0x95c <lcd_puts_p+0xe>
        lcd_putc(c);
 956:	0e 94 e1 02 	call	0x5c2	; 0x5c2 <lcd_putc>
        lcd_putc(*s++);
    }
}
void lcd_puts_p(const char* progmem_s){
    register uint8_t c;
    while ((c = pgm_read_byte(progmem_s++))) {
 95a:	fe 01       	movw	r30, r28
 95c:	ef 01       	movw	r28, r30
 95e:	21 96       	adiw	r28, 0x01	; 1
 960:	84 91       	lpm	r24, Z
 962:	81 11       	cpse	r24, r1
 964:	f8 cf       	rjmp	.-16     	; 0x956 <lcd_puts_p+0x8>
        lcd_putc(c);
    }
}
 966:	df 91       	pop	r29
 968:	cf 91       	pop	r28
 96a:	08 95       	ret

0000096c <main>:

//OLED can display 21 characters in each row and 7 rows down.


int main(void){
  lcd_init(LCD_DISP_ON);    // init lcd and turn on
 96c:	8f ea       	ldi	r24, 0xAF	; 175
 96e:	0e 94 af 02 	call	0x55e	; 0x55e <lcd_init>
  
  lcd_puts("She sells seashells");  // put string from RAM to display (TEXTMODE) or buffer (GRAPHICMODE)
 972:	81 e0       	ldi	r24, 0x01	; 1
 974:	91 e0       	ldi	r25, 0x01	; 1
 976:	0e 94 9a 04 	call	0x934	; 0x934 <lcd_puts>
  lcd_gotoxy(0,1);          // set cursor to first column at line 3
 97a:	61 e0       	ldi	r22, 0x01	; 1
 97c:	80 e0       	ldi	r24, 0x00	; 0
 97e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <lcd_gotoxy>
  lcd_puts("down by the seashore");
 982:	85 e1       	ldi	r24, 0x15	; 21
 984:	91 e0       	ldi	r25, 0x01	; 1
 986:	0e 94 9a 04 	call	0x934	; 0x934 <lcd_puts>
  lcd_gotoxy(0,6);
 98a:	66 e0       	ldi	r22, 0x06	; 6
 98c:	80 e0       	ldi	r24, 0x00	; 0
 98e:	0e 94 73 02 	call	0x4e6	; 0x4e6 <lcd_gotoxy>
  lcd_puts_p(PSTR("String from FLASH"));  // puts string form flash to display (TEXTMODE) or buffer (GRAPHICMODE)
 992:	87 e0       	ldi	r24, 0x07	; 7
 994:	93 e0       	ldi	r25, 0x03	; 3
 996:	0e 94 a7 04 	call	0x94e	; 0x94e <lcd_puts_p>
 99a:	ff cf       	rjmp	.-2      	; 0x99a <main+0x2e>

0000099c <_exit>:
 99c:	f8 94       	cli

0000099e <__stop_program>:
 99e:	ff cf       	rjmp	.-2      	; 0x99e <__stop_program>
